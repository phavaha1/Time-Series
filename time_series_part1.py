# -*- coding: utf-8 -*-
"""time_series_part1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IOI16arDuT8O6p7x1nqufcC-rlEgLcEp

In this tutorial we will explain the fundametal of MAs
"""

from google.colab import drive
drive.mount('/content/drive')

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

"""# Time series remove trend"""

s = np.array([i + np.random.rand() for i in range(100)])

import matplotlib.pyplot as plt
plt.plot(s, color='green')

def differencing(s, interval=1):
  diff = [s[i]-s[i-interval] for i in range(interval, len(s))]
  return diff

ds_1 = differencing(s, 1)

plt.plot(ds_1, color='blue')

from statsmodels.tsa.stattools import adfuller
r = adfuller(s)
print('ADF Statistic: {}'.format(r[0]))
print('p-value: {}'.format(r[1]))
print('Critical Values:')
for key, value in r[4].items():
    print('\t{}: {}'.format(key, value))

r2 = adfuller(ds_1)
print('ADF Statistic: {}'.format(r2[0]))
print('p-value: {}'.format(r2[1]))
print('Critical Values:')
for key, value in r2[4].items():
    print('\t{}: {}'.format(key, value))

"""# Time series seasonality"""

# load data, replace with your csv file path
df = pd.read_csv('/content/drive/My Drive/data/temperature/hanoi_temp.csv')
temp_df = df.iloc[:,2:]
temp_df.head(3)

temp_series = pd.Series()
for i in range(len(temp_df)):
  temp_series = temp_series.append(temp_df.loc[i], ignore_index=True)

plt.plot(temp_series)

# check the stationary before remove season part:
r = adfuller(temp_series)
print('ADF Statistic: {}'.format(r[0]))
print('p-value: {}'.format(r[1]))
print('Critical Values:')
for key, value in r[4].items():
    print('\t{}: {}'.format(key, value))

year_diff = temp_series.diff(periods=12)
plt.plot(year_diff, color='green')

# Check stationary after remove season part:
r2 = adfuller(year_diff[12:])
print('ADF Statistic: {}'.format(r2[0]))
print('p-value: {}'.format(r2[1]))
print('Critical Values:')
for key, value in r2[4].items():
    print('\t{}: {}'.format(key, value))

